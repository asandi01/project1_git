@model Project1.Models.PaymentRecordModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/shared/_LayoutPage.cshtml";
}
<!-- Page Heading -->
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">
            Payment
            <small>Record</small>
        </h1>
        <ol class="breadcrumb">
            <li>
                <i class="fa fa-dashboard"></i>  <a href="/">Dashboard</a>
            </li>
            <li>
                <i class="fa fa-edit"></i>  <a href="/PaymentRecord">Payment Record</a>
            </li>
            <li class="active">
                <i class="fa fa-file"></i> Create
            </li>
        </ol>
    </div>
</div>
<!-- /.row -->



<div class="row">
    <div class="col-xl-6">
        <h2 class="page-header">Create</h2>

        @using (Html.BeginForm()) {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <fieldset class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.detail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.detail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.detail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.recurrence, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.recurrence, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.recurrence, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset class="form-group" id="recurrenceHidden">
                    <div class="form-group">
                        @Html.LabelFor(model => model.recurrenciaTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select id="recurrenciaTypeIdSelect" name="recurrenciaTypeIdSelect" class="form-control">
                                @{
                                    foreach (var listData in ViewBag.resourceTypeList) {
                                        <option value="@listData.id">@listData.detail</option>
                                    }
                                }
                            </select>
                        </div>
                        @Html.HiddenFor(model => model.recurrenciaTypeId)
                    </div>
                </fieldset>

                <fieldset class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.paymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.paymentDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.paymentDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.providerId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select id="providerIdSelect" name="providerIdSelect" class="form-control">
                                @{
                                    foreach (var listData in ViewBag.providerList) {
                                        <option value="@listData.id">@listData.detail</option>
                                    }
                                }
                            </select>
                        </div>
                        @Html.HiddenFor(model => model.providerId)
                    </div>
                </fieldset>

                <fieldset class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.expenseCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select id="expenseCategoryIdSelect" name="expenseCategoryIdSelect" class="form-control">
                                @{
                                    foreach (var listData in ViewBag.categoryList) {
                                        <option value="@listData.id">@listData.detail</option>
                                    }
                                }
                            </select>
                        </div>
                        @Html.HiddenFor(model => model.expenseCategoryId)
                    </div>
                </fieldset>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>

            </div>
                                    }
        <p>@ViewBag.Message</p>
        <br />
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

<style>
    #recurrenceHidden {
        display: none;
    }
</style>

<script type="text/javascript">
    $(function () {
        $('.datepicker').datetimepicker({
            format: 'DD/MM/YYYY'
        });

        $('#providerId').val($('#providerIdSelect').val());
        $('#providerIdSelect').on('change', function () {
            $('#providerId').val(this.value);
        })

        $('#expenseCategoryId').val($('#expenseCategoryIdSelect').val());
        $('#expenseCategoryIdSelect').on('change', function () {
            $('#expenseCategoryId').val(this.value);
        })

        $('#recurrenciaTypeId').val($('#recurrenciaTypeIdSelect').val());
        $('#recurrenciaTypeIdSelect').on('change', function () {
            $('#recurrenciaTypeId').val(this.value);
        })

        if ($('#recurrence:checkbox:checked').length > 0) {
            $('#recurrenceHidden').show();
        } else {
            $('#recurrenceHidden').hide();
        }

        $('#recurrence').click(function () {
            if ($('#recurrence:checkbox:checked').length > 0) {
                $('#recurrenceHidden').show();
            } else {
                $('#recurrenceHidden').hide();
            }
        });
    });
    $(document).ready(function () {
        if ($('#recurrence:checkbox:checked').length > 0) {
            $('#recurrenceHidden').show();
        } else {
            $('#recurrenceHidden').hide();
        }

        console.log("window..... loaded");
    });

    $(window).on("load", function () {
        console.log("window loaded");
    });
</script>